MIN_SLEEP=1
MAX_SLEEP=3
replace() {
    sed -e "s/\${ORG}/$1/" \
        -e "s/\${ORG_}/$1/" \
        -e "s/\${PRIVATE_KEY}/$2/" \
        -e "s/\${PORT}/$3/" \
        kubernetes/{{data['domain']}}-ca_deploy.yaml | sed -e $'s/\\\\n/\\\n        /g'
}

kubectl apply -f kubernetes/fabric-{{data['domain']}}_pv.yaml
sleep $MIN_SLEEP

kubectl apply -f kubernetes/fabric-{{data['domain']}}_pvc.yaml
sleep $MIN_SLEEP

{% for org in data['orgs']%}
    {% for  peer in org['peers'] %}
kubectl apply -f kubernetes/backup-{{data['domain']}}-{{org['name']}}-{{peer['peer']}}_pv.yaml
sleep $MIN_SLEEP

kubectl apply -f kubernetes/backup-{{data['domain']}}-{{org['name']}}-{{peer['peer']}}_pvc.yaml
sleep $MIN_SLEEP

    {% endfor %}
{% endfor %}

kubectl apply -f kubernetes/backup-{{data['domain']}}-orderer_pv.yaml
sleep $MIN_SLEEP

kubectl apply -f kubernetes/backup-{{data['domain']}}-orderer_pvc.yaml
sleep $MIN_SLEEP

kubectl apply -f kubernetes/fabric-{{data['domain']}}-tools.yaml
sleep $MAX_SLEEP

kubectl exec -i fabric-{{data['domain']}}-tools -- mkdir /fabric/config
sleep $MIN_SLEEP

kubectl cp ./network.sh fabric-{{data['domain']}}-tools:/
sleep $MIN_SLEEP

kubectl cp ./channel.sh fabric-{{data['domain']}}-tools:/
sleep $MIN_SLEEP

kubectl cp config/configtx.yaml fabric-{{data['domain']}}-tools:/fabric/config/
sleep $MIN_SLEEP

kubectl cp config/crypto-config.yaml fabric-{{data['domain']}}-tools:/fabric/config/
sleep $MIN_SLEEP

kubectl exec -i fabric-{{data['domain']}}-tools -- mkdir -p /opt/gopath/src/github.com/hyperledger
sleep $MIN_SLEEP

kubectl cp ~/go/src/github.com/hyperledger/fabric  fabric-{{data['domain']}}-tools:/opt/gopath/src/github.com/hyperledger/
sleep $MIN_SLEEP

kubectl cp ~/go/src/github.com/golang  fabric-{{data['domain']}}-tools:/opt/gopath/src/github.com/
sleep $MIN_SLEEP

kubectl exec -i fabric-{{data['domain']}}-tools -- /bin/bash network.sh
sleep $MIN_SLEEP

kubectl cp fabric-{{data['domain']}}-tools:/fabric/crypto-config/ordererOrganizations/{{data['domain']}}.com/tlsca/tlsca.{{data['domain']}}.com-cert.pem ./config/connection-files/tlsca.{{data['domain']}}.com-cert.pem
sleep $MIN_SLEEP

{% for org in data['orgs'] %}
kubectl cp fabric-{{data['domain']}}-tools:/fabric/crypto-config/peerOrganizations/{{org['name']}}.{{data['domain']}}.com/tlsca/tlsca.{{org['name']}}.{{data['domain']}}.com-cert.pem ./config/connection-files/{{org['name']}}/tlsca.{{org['name']}}.{{data['domain']}}.com-cert.pem
sleep $MIN_SLEEP

kubectl cp fabric-{{data['domain']}}-tools:/fabric/crypto-config/peerOrganizations/{{org['name']}}.{{data['domain']}}.com/ca/ca.{{org['name']}}.{{data['domain']}}.com-cert.pem ./config/connection-files/{{org['name']}}/ca.{{org['name']}}.{{data['domain']}}.com-cert.pem
sleep $MIN_SLEEP
{% endfor %}

cd config/connection-files
chmod 777 *
./ccp-generate.sh
cd ../..

{% for org in data['orgs']%}

export PRIVATE_KEY=$(kubectl exec -i fabric-{{data['domain']}}-tools -- ls /fabric/crypto-config/peerOrganizations/{{org['name']}}.{{data['domain']}}.com/ca/ | grep ".*_sk")
echo "$(replace {{org['name']}} $PRIVATE_KEY {{org['ca']['target_port']}})" > kubernetes/{{data['domain']}}-{{org['name']}}-ca_deploy.yaml

kubectl apply -f kubernetes/{{data['domain']}}-{{org['name']}}-ca_deploy.yaml
sleep $MIN_SLEEP

kubectl apply -f kubernetes/{{data['domain']}}-{{org['name']}}-ca_svc.yaml
sleep $MIN_SLEEP

{% endfor %}
kubectl apply -f kubernetes/{{data['domain']}}-orderer_deploy.yaml
sleep $MIN_SLEEP

kubectl apply -f kubernetes/{{data['domain']}}-orderer_svc.yaml
sleep $MIN_SLEEP

{% for org in data['orgs']%}
    {% for peer in org['peers'] %}
kubectl apply -f kubernetes/{{data['domain']}}-{{org['name']}}-{{peer['peer']}}_deploy.yaml
sleep $MIN_SLEEP

kubectl apply -f kubernetes/{{data['domain']}}-{{org['name']}}-{{peer['peer']}}_svc.yaml
sleep $MIN_SLEEP
    {% endfor %}

{% endfor %}
sleep $MAX_SLEEP

set -x
kubectl exec -i fabric-{{data['domain']}}-tools -- /bin/bash channel.sh
res=$?
set +x
if [ $res -ne 0 ]; then
kubectl cp fabric-{{data['domain']}}-tools:/fabric/log.txt ../../log.txt
exit 1
else
exit 0
fi
